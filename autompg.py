# -*- coding: utf-8 -*-
"""autompg.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c5Dlzb7RPt7B7sE1kxh_8a06sd2gm8Kb

# AUTOMPG LINEAR REGRESSION
"""

#importing the libraries
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, mean_absolute_error

"""## 1. Convert the data from csv file into dataframe"""

data=pd.read_csv("/content/auto-mpg.csv")
data.head()

"""## 2. Display shape

"""

data.shape

data.info()

"""## 3. Display the car names and their count"""

data['car name'].value_counts()

"""## 4. Identify the missing value attributes"""

data['horsepower'].unique()

data['horsepower'] = data['horsepower'].replace('?', np.NaN).astype(np.float)
data['horsepower'].dtype
data['horsepower'].isnull().sum()

data['horsepower'].fillna(data['horsepower'].mean(), inplace = True)
data['horsepower'].unique()

data.isna().sum()

from sklearn.preprocessing import LabelEncoder
label=LabelEncoder()
data['car name']=label.fit_transform(data["car name"])

"""## 5. Split the dataset as 80:20 for training and testing"""

y=data.pop("mpg")
x=data

x_train, x_test, y_train, y_test=train_test_split(x, y, test_size = 0.2)

"""## 6. Build a linear regression model, predict the output for test set and calculate the error."""

model=LinearRegression()

model.fit(x_train, y_train)

y_pred=model.predict(x_test)
rmse=mean_squared_error(y_pred,y_test)
mae=mean_absolute_error(y_test, y_pred)
print("Mean Absolute Error=", mae)
print("Root Mean Squared Error=", rmse)